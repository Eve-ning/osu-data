name: Docker Compose Services CI

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build the Docker image
        run: |
          docker compose --env-file test/.test.env up --wait

      - name: Install mysql-server
        run: |
          sudo apt-get install mysql-server

      - name: Wait for osu.mysql to initialize
        run: |
          RETRIES=0
          while ! docker logs osu.mysql 2>&1 | grep -q "MySQL init process done. Ready for start up."; do
            echo -e "\e[33mWaiting for osu.mysql to complete initialization...\e[0m"
            sleep 5
            if [ $RETRIES -ge 10 ]; then
              echo -e "\e[31mFailed to initialize osu.mysql\e[0m"
              exit 1
            fi
          done;

      - name: Test MySQL
        run: |
          docker exec osu.mysql \
          mysql -u root --password=p@ssw0rd1 \
          -e "use osu; select * from osu_counts limit 100;"

      - name: Test MySQL innodb_doublewrite is OFF
        run: |
            if [[ $(docker exec osu.mysql mysql \
                    -u root -pp@ssw0rd1\
                    -e "show variables like 'innodb_doublewrite';" | grep -c OFF) -eq 1 ]]; then
              echo -e "\e[32mMySQL innodb_doublewrite is OFF\e[0m"
            else
              echo -e "\e[31mMySQL innodb_doublewrite is ON\e[0m"
              exit 1
            fi

      - name: Stop the Docker Container
        run: |
          docker compose stop

      - name: Build Docker Image with files
        run: |
          docker compose --profile files --env-file test/.test.env up --wait --build

      - name: Test Files Service & Files Folder exist
        run: |
          docker exec osu.files sh -c 'if [ $(ls YYYY_MM_DD_osu_files/ | wc -l) -ge 1 ]; then exit 0; else exit 1; fi'

